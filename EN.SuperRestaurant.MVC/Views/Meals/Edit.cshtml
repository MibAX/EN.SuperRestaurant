@using EN.SuperRestaurant.MVC.Models.Meals
@model CreateUpdateMealViewModel

@{
    ViewData["Title"] = "Edit Meal";
}

<div class="container">

    <h1>
        Edit Meal
        <span class="text-primary">@Model.Name</span>
    </h1>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />

                <div class="form-floating">
                    <input asp-for="Name" class="form-control" placeholder="Name" />
                    <label asp-for="Name" class="control-label"></label>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="form-floating mt-3">
                    <input asp-for="Description" class="form-control" placeholder="Description" />
                    <label asp-for="Description" class="control-label"></label>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-floating mt-3">
                    <select asp-for="IngredientIds" class="form-control select-2" placeholder="Ingredients" asp-items="@Model.IngredientLookup"></select>
                    <label asp-for="IngredientIds" class="control-label"></label>
                    <span asp-validation-for="IngredientIds" class="text-danger"></span>
                </div>

                <div class="form-group mt-4">
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    <input type="submit" value="Save" class="btn btn-primary ms-2" />
                </div>
            </form>
        </div>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
